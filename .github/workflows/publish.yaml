name: Publish Binary

on:
  # This action runs whenever a release is published
  release:
    types:
    - published

  # Run on pull requests to publish binaries to pull request workflow runs
  pull_request:
    branches:
      - main
    paths:
      - bin/**
      - examples/**
      - src/**
      - Cargo.*
      - rust-toolchain.toml
      - .github/workflows/publish.yaml

permissions:
  contents: read # Default token to read

jobs:
  upload-artifact:
    if: ${{ github.repository_owner == 'edera-dev' }}
    name: Publish Binary
    permissions:
      contents: write # Needed to publish binary
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { os: linux, arch: x86_64, libc: musl, static: true, on: ubuntu-latest }
        - { os: linux, arch: x86_64, libc: gnu, static: true, on: ubuntu-latest }
        - { os: linux, arch: x86_64, libc: gnu, static: false, on: ubuntu-latest }
    env:
      TARGET_OS: '${{ matrix.platform.os }}'
      TARGET_ARCH: '${{ matrix.platform.arch }}'
      TARGET_LIBC: '${{ matrix.platform.libc }}'
      STATIC_BINARY: '${{ matrix.platform.static }}'
    runs-on: '${{ matrix.platform.on }}'
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # zizmor: ignore[stale-action-refs] -- pinned to stable branch

      - name: Install cargo-make
        run: cargo install cargo-make

      - name: 'Build binary'
        run: cargo make --profile release build

      - name: 'Set platform name'
        id: name
        run: |
          platform="${TARGET_OS}-${TARGET_ARCH}-${TARGET_LIBC}"

          # Adding -static to a musl binary name is redundant
          [ "${STATIC_BINARY}" = "true" ] && [ "${TARGET_LIBC}" != "musl" ] && platform="${platform}-static"

          echo "platform=$platform" >> $GITHUB_OUTPUT

      - name: 'Assemble styrolite executable'
        run: |
          tag_name="${TAG_NAME}"
          [ -z $tag_name ] && tag_name="${DEFAULT_BRANCH}"
          export STYROLITE_FORM='styrolite'
          export STYROLITE_TAG_NAME="${tag_name}"
          export STYROLITE_PLATFORM
          export STYROLITE_RELEASE_DIR='target/*/release'
          cargo make --profile release assemble-release-assets
        env:
          TAG_NAME: '${{ github.event.release.tag_name }}'
          DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'
          STYROLITE_PLATFORM: '${{ steps.name.outputs.platform }}'

      - name: 'Upload styrolite to workflow run'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: styrolite-${{ steps.name.outputs.platform }}
          path: |
            target/assets/*

      - name: generate cultivator token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: generate-token
        with:
          app-id: "${{ secrets.EDERA_CULTIVATION_APP_ID }}"
          private-key: "${{ secrets.EDERA_CULTIVATION_APP_PRIVATE_KEY }}"

      - name: 'Upload all release artifacts'
        if: ${{ github.event_name == 'release' }}
        run: |
          export STYROLITE_TAG_NAME="${TAG_NAME}"
          cargo make --profile release upload-release-assets
        env:
          GITHUB_TOKEN: "${{ steps.generate-token.outputs.token }}"
          TAG_NAME: '${{ github.event.release.tag_name }}'
